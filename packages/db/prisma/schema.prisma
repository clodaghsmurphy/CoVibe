// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["deno"]
  output          = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Log {
  id      Int    @id @default(autoincrement())
  level   Level
  message String
  meta    Json
}

enum Level {
  Info
  Warn
  Error
}

model User {
  id         String      @id @default(cuid())
  name       String
  email      String      @unique
  password   String      // This will store the hashed password
  households Household[] @relation("HouseholdMembers")
}

model Household {
  id        String    @id @default(cuid())
  name      String
  members   User[]    @relation("HouseholdMembers")
  groceries Grocery[]
}

model Grocery {
  id                String        @id @default(cuid())
  name              String
  category          String // e.g., "food", "cleaning supplies", etc.
  purchaseFrequency Frequency
  priceRecords      PriceRecord[]
  notes             String? // Any specific notes (brand preferences, etc.)
  householdId       String
  household         Household     @relation(fields: [householdId], references: [id])
}

model PriceRecord {
  id        String   @id @default(cuid())
  groceryId String
  grocery   Grocery  @relation(fields: [groceryId], references: [id])
  price     Float // Price in your chosen currency
  date      DateTime // When the price was updated
  source    String // e.g., "website scraping", "receipt", etc.
}

enum Frequency {
  MONTHLY
  QUARTERLY
  ANNUALLY
}
